//
// build.gradle
//

buildscript {
  ext {
    lombokVersion             = "1.18.8"

    spockVersion              = "1.3-groovy-2.5"
    groovyVersion             = "2.5.7"

    slf4jVersion              = "1.7.26"
    nettyVersion              = "4.1.38.Final"
    jacksonVersion            = "2.9.9"
    rxJavaVersion             = "2.2.10"

    micronautVersion          = "1.2.0.RC2"
    micronautTestVersion      = "1.1.0.RC1"
    micrometerVersion         = "1.1.5"

    springBootVersion         = "2.1.6.RELEASE"
    vertxVersion              = "3.8.0"
  }
}

plugins {
  id "idea"
  id "eclipse"

  id "java"
  id "groovy"
  id "org.jetbrains.kotlin.jvm"             version "1.3.41"

  id "net.researchgate.release"             version "2.8.0"
  id "io.spring.dependency-management"      version "1.0.8.RELEASE"
  id "com.gorylenko.gradle-git-properties"  version "2.0.0"
  id "com.adarshr.test-logger"              version "1.7.0"
  id "com.fizzpod.sweeney"                  version "4.0.0"
}

allprojects {
  apply plugin: "java"
  apply plugin: "groovy"
  apply plugin: "io.spring.dependency-management"
  apply plugin: "com.adarshr.test-logger"

  repositories {
    mavenLocal()
    mavenCentral()
  }

  dependencyManagement {
    imports {
      mavenBom  "com.fasterxml.jackson:jackson-bom:${jacksonVersion}"
      mavenBom  "io.netty:netty-bom:${nettyVersion}"
      mavenBom  "io.micronaut:micronaut-bom:${micronautVersion}"
      mavenBom  "io.vertx:vertx-stack-depchain:${vertxVersion}"
    }

    dependencies {
      dependency  "org.projectlombok:lombok:${lombokVersion}"
      dependency  "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"
      dependency  "ch.qos.logback:logback-classic:1.2.3"
      dependency  "io.github.microutils:kotlin-logging:1.7.2"

      dependencySet(group: "org.slf4j", version: "${slf4jVersion}") {
        entry "slf4j-api"
        entry "jcl-over-slf4j"
      }
  
      dependencySet(group: "io.micrometer", version: "${micrometerVersion}") {
        entry "micrometer-core"
      }
    }
  }

  ext['groovy.version'] = "${groovyVersion}"

  configurations.all {
    resolutionStrategy {
      force "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}",
        "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",
        "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    }

    // we don't want commons-logging, we'll use slf4j-jcl instead
    exclude module: "commons-logging"
  }

  // java compilation options
  tasks.withType(JavaCompile) {
    options.encoding                        = "UTF-8"
    options.incremental                     = true
    options.compilerArgs                    << "-Xlint:all"
  }

  // groovy compilation options
  tasks.withType(GroovyCompile) {
    options.incremental                     = true
    groovyOptions.optimizationOptions.indy  = true
    options.compilerArgs                    << "-Xlint:all"
  }

  compileJava {
    sourceCompatibility = "8"
    targetCompatibility = "8"
  }

  compileKotlin {

  }

  dependencies {
    annotationProcessor     "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"

    implementation          "org.slf4j:slf4j-api"

    testImplementation      "org.codehaus.groovy:groovy-test:${groovyVersion}"
    testImplementation      "org.spockframework:spock-core:${spockVersion}"
    testImplementation      "org.objenesis:objenesis:3.0.1"
    testImplementation      "cglib:cglib-nodep:3.2.9"
    testImplementation      "ch.qos.logback:logback-classic"
  }

  // enforce build rules
  apply plugin: 'com.fizzpod.sweeney'
  sweeney {
    enforce "gradle:[5.5,)"   // require gradle >= 5.2
    enforce "jdk:[12,)"        // require JDK12 to build
  }

  test {
    failFast          = true
    systemProperties  System.getProperties()
    jvmArgs           '-noverify', '-XX:TieredStopAtLevel=1'
  }
}

release {
  // allow performing releases from any branch
  git.requireBranch = ""
}

// vim:shiftwidth=2 softtabstop=2 expandtab
// EOF